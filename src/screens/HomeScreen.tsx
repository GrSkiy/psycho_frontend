import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import '../assets/styles/HomeScreen.css'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏

// --- –¢–∏–ø–∏–∑–∞—Ü–∏—è –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–æ–≤ (–¥–æ–±–∞–≤–∏–º) ---
interface ChatHistoryItem {
  id: string; // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —á–∞—Ç–∞
  title: string; // –ù–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —á–∞—Ç–∞
  lastMessageTimestamp?: string; // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
}

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–º (–ø–æ—Ç–æ–º –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–Ω–µ—Å—Ç–∏ –∏–ª–∏ –ø–æ–ª—É—á–∞—Ç—å –æ—Ç–∫—É–¥–∞-—Ç–æ)
const topics = [
  { id: 1, name: '–û—Ç–Ω–æ—à–µ–Ω–∏—è', illustration: '‚ù§Ô∏è' }, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —ç–º–æ–¥–∑–∏ –∫–∞–∫ –∑–∞–≥–ª—É—à–∫–∏
  { id: 2, name: '–ó–¥–æ—Ä–æ–≤—å–µ', illustration: 'ü©∫' },
  { id: 3, name: '–†–æ–¥–∏—Ç–µ–ª–∏', illustration: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶' },
  { id: 4, name: '–†–∞–±–æ—Ç–∞', illustration: 'üíº' }, 
  { id: 5, name: '–°–∞–º–æ–æ—Ü–µ–Ω–∫–∞', illustration: '‚ú®' },
  { id: 6, name: '–¢—Ä–µ–≤–æ–≥–∞', illustration: 'üò•' },
  { id: 7, name: '–ü–æ–∏—Å–∫ —Å–µ–±—è', illustration: 'ü§î' },
];

function HomeScreen() {
  // –¢–µ–∫—Å—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
  const buttonTexts = {
    talk: "–ü—Ä–æ—Å—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å",
    amy: "–ù–∞–ø–∏—Å–∞—Ç—å –≠–º–∏", // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≠–º–∏ - —ç—Ç–æ –∏–º—è –±–æ—Ç–∞ –∏–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º?
    help: "–Ø –ø–æ–ø–∞–ª(–∞) –≤ —Ç—è–∂–µ–ª—É—é —Å–∏—Ç—É–∞—Ü–∏—é"
  };

  // --- –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–æ–≤ (–¥–æ–±–∞–≤–∏–ª–∏) ---
  const [chatHistory, setChatHistory] = useState<ChatHistoryItem[]>([]);
  // --- –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è UX) ---
  const [isLoadingHistory, setIsLoadingHistory] = useState(true);

  // --- –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–æ–≤ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ (–¥–æ–±–∞–≤–∏–ª–∏) ---
  useEffect(() => {
    // --- –ó–ê–ì–õ–£–®–ö–ê: –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–æ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ API ---
    const fetchChatHistory = async () => {
      setIsLoadingHistory(true);
      try {
        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ API
        await new Promise(resolve => setTimeout(resolve, 500)); // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏
        // –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö (–ø–æ—Ç–æ–º —ç—Ç–æ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å –±—ç–∫–µ–Ω–¥–∞)
        const fetchedHistory: ChatHistoryItem[] = [
           { id: 'chat1', title: '–†–∞–∑–≥–æ–≤–æ—Ä –ø—Ä–æ —Ä–∞–±–æ—Ç—É', lastMessageTimestamp: '2024-07-28T10:00:00Z' },
           { id: 'chat2', title: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Ç—Ä–µ–≤–æ–≥–∏', lastMessageTimestamp: '2024-07-27T15:30:00Z' },
        ];
         // const response = await fetch('/api/chats'); // –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
         // if (!response.ok) throw new Error('Failed to fetch chat history');
         // const fetchedHistory = await response.json();

        setChatHistory(fetchedHistory);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–æ–≤:", error);
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É, –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      } finally {
        setIsLoadingHistory(false);
      }
    };

    fetchChatHistory();
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  return (
    <div className="home-screen">

      <div className="header">
        <div className="header-title">
          <h1>nora</h1>
        </div>
        <div className="header-subtitle">
          <h2>–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è?</h2>
        </div>
      </div>
      <div className="main-actions">
        <Link 
          to="/chat" 
          className="action-button green" 
          state={{ initialMessage: buttonTexts.talk }}
        >
          {buttonTexts.talk}
        </Link>
        <div className="action-button-low-container">
          <Link 
            to="/chat" 
            className="action-button pink" 
            state={{ initialMessage: buttonTexts.amy }}
          >
            {buttonTexts.amy}
          </Link>
          <Link 
            to="/chat" 
            className="action-button purple" 
            state={{ initialMessage: buttonTexts.help }}
          >
            {buttonTexts.help}
          </Link>
        </div>
      </div>

      <div className="topics-section">
        <h3>–¢–µ–º—ã –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞</h3>
        <div className="topics-list">
          {topics.map((topic) => (
            <Link 
              key={topic.id} 
              to="/chat"
              className="topic-item"
              state={{ initialMessage: topic.name }}
              style={{ textDecoration: 'none' }}
            >
              <div className="topic-circle">{topic.illustration}</div>
              <span>{topic.name}</span>
            </Link>
          ))}
        </div>
      </div>

      {/* --- –ù–æ–≤—ã–π –±–ª–æ–∫: –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ (–¥–æ–±–∞–≤–∏–ª–∏) --- */}
      {!isLoadingHistory && chatHistory.length > 0 && (
        <div className="history-section">
          <h3>–ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤</h3>
          <div className="history-list">
            {chatHistory.map((chat) => (
              <Link
                key={chat.id}
                // --- –í–∞–∂–Ω–æ: –ù–∞–≤–∏–≥–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Å—Ç–∏ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —á–∞—Ç ---
                // --- –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ—É—Ç–∏–Ω–≥ –Ω–∞ /chat/:chatId ---
                to={`/chat/${chat.id}`}
                className="history-item"
                style={{ textDecoration: 'none' }}
                // --- –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å title –≤ state, –µ—Å–ª–∏ –æ–Ω –Ω—É–∂–µ–Ω –Ω–∞ —ç–∫—Ä–∞–Ω–µ —á–∞—Ç–∞ –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏ ---
                // state={{ chatTitle: chat.title }}
              >
                <span>{chat.title}</span>
                {/* –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–∞—Ç—É/–≤—Ä–µ–º—è */}
                {/* {chat.lastMessageTimestamp && <span className="history-item-date">{new Date(chat.lastMessageTimestamp).toLocaleString()}</span>} */}
              </Link>
            ))}
          </div>
        </div>
      )}
       {/* --- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) --- */}
      {isLoadingHistory && (
         <div className="loading-indicator">–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏...</div>
      )}
    </div>
  );
}

export default HomeScreen; 